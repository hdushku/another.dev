<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace front\models\base;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "blog_post".
 *
 * @property integer $id
 * @property integer $category_id
 * @property integer $type_id
 * @property string $title
 * @property string $title_seo
 * @property string $alias
 * @property string $meta_description
 * @property string $preview
 * @property string $content
 * @property integer $views
 * @property integer $publish_status
 * @property integer $created_at
 * @property integer $updated_at
 *
 * @property \front\models\Category $category
 * @property \front\models\Type $type
 * @property string $aliasModel
 */
abstract class BlogPost extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'blog_post';
    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['category_id', 'type_id', 'views', 'publish_status'], 'integer'],
            [['type_id', 'title', 'title_seo', 'alias', 'preview', 'content'], 'required'],
            [['meta_description', 'preview', 'content'], 'string'],
            [['title', 'title_seo', 'alias'], 'string', 'max' => 255],
            [['category_id'], 'exist', 'skipOnError' => true, 'targetClass' => \front\models\Category::className(), 'targetAttribute' => ['category_id' => 'id']],
            [['type_id'], 'exist', 'skipOnError' => true, 'targetClass' => \front\models\Type::className(), 'targetAttribute' => ['type_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'category_id' => Yii::t('app', 'Category ID'),
            'type_id' => Yii::t('app', 'Type ID'),
            'title' => Yii::t('app', 'Title'),
            'title_seo' => Yii::t('app', 'Title Seo'),
            'alias' => Yii::t('app', 'Alias'),
            'meta_description' => Yii::t('app', 'Meta Description'),
            'preview' => Yii::t('app', 'Preview'),
            'content' => Yii::t('app', 'Content'),
            'views' => Yii::t('app', 'Views'),
            'publish_status' => Yii::t('app', 'Publish Status'),
            'created_at' => Yii::t('app', 'Created At'),
            'updated_at' => Yii::t('app', 'Updated At'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCategory()
    {
        return $this->hasOne(\front\models\Category::className(), ['id' => 'category_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getType()
    {
        return $this->hasOne(\front\models\Type::className(), ['id' => 'type_id']);
    }




}
